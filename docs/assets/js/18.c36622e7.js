(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{550:function(v,_,t){v.exports=t.p+"assets/img/image-20210404141615508.2459db33.png"},551:function(v,_,t){v.exports=t.p+"assets/img/image-20210404142051957.74e78b32.png"},552:function(v,_,t){v.exports=t.p+"assets/img/image-20210404142204421.eb0a8f6e.png"},553:function(v,_,t){v.exports=t.p+"assets/img/image-20210404143459531.c4fd54e2.png"},554:function(v,_,t){v.exports=t.p+"assets/img/image-20210404143810421.6212d4ab.png"},911:function(v,_,t){"use strict";t.r(_);var a=t(22),s=Object(a.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h1",{attrs:{id:"集群阶段开篇概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群阶段开篇概述"}},[v._v("#")]),v._v(" 集群阶段开篇概述")]),v._v(" "),a("p",[a("img",{attrs:{src:t(550),alt:"image-20210404141615508"}})]),v._v(" "),a("p",[v._v("一般如上图所示，来衡量一个项目的 规模，也会随着用户量的增长进行往集群方向的演进")]),v._v(" "),a("p",[v._v("本课程也是按照这个进程来不断演进")]),v._v(" "),a("h2",{attrs:{id:"单体部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单体部署"}},[v._v("#")]),v._v(" 单体部署")]),v._v(" "),a("p",[a("img",{attrs:{src:t(551),alt:"image-20210404142051957"}})]),v._v(" "),a("p",[v._v("可以全部单节点部署，也可以每个组件分开部署，但是还是单体部署，如下所示")]),v._v(" "),a("p",[a("img",{attrs:{src:t(552),alt:"image-20210404142204421"}})]),v._v(" "),a("h2",{attrs:{id:"单体架构的优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单体架构的优点"}},[v._v("#")]),v._v(" 单体架构的优点")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("小团队成型即可完成开发、测试、上线")]),v._v(" "),a("p",[v._v("更新的话，停机时间短")])]),v._v(" "),a("li",[a("p",[v._v("迭代周期短，速度快")])]),v._v(" "),a("li",[a("p",[v._v("打包方便，运维省事")])])]),v._v(" "),a("h2",{attrs:{id:"单体架构面临的挑战"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单体架构面临的挑战"}},[v._v("#")]),v._v(" 单体架构面临的挑战")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("单节点宕机造成所有服务不可用")]),v._v(" "),a("p",[v._v("随着业务的发展，用户量增多，系统承载能力变弱")]),v._v(" "),a("p",[v._v("可以通过集群来实现高可用")])]),v._v(" "),a("li",[a("p",[v._v("耦合度太高（迭代、测试、部署）")]),v._v(" "),a("p",[v._v("随着代码量增多，维护、开发都不是那么容易了")]),v._v(" "),a("p",[v._v("可以通过业务拆分，如微服务来改进")])]),v._v(" "),a("li",[a("p",[v._v("单节点并发能力有限")]),v._v(" "),a("p",[v._v("可以通过负载均衡来降低服务器的压力")])])]),v._v(" "),a("p",[v._v("现阶段先做集群，后续根据业务的发展来进行架构的升级。")]),v._v(" "),a("h2",{attrs:{id:"集群概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群概念"}},[v._v("#")]),v._v(" 集群概念")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("计算机 "),a("strong",[v._v("群体")]),v._v(" 构成整个系统")])]),v._v(" "),a("li",[a("p",[v._v("这个 "),a("strong",[v._v("群体")]),v._v(" 构成一个整体，不能独立存在")]),v._v(" "),a("p",[v._v("对于用户来讲是 "),a("strong",[v._v("透明")]),v._v(" 的，一个请求过来，只要能正确处理响应即可，用户并不关心你后端是 1 台服务器还是 1000 台服务器")])]),v._v(" "),a("li",[a("p",[v._v("人多力量大，群体提升并发与可用性")]),v._v(" "),a("p",[v._v("集群：每个节点运行的业务相同")]),v._v(" "),a("p",[v._v("分布式：每个节点运行的业务不同")])])]),v._v(" "),a("h2",{attrs:{id:"集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群"}},[v._v("#")]),v._v(" 集群")]),v._v(" "),a("p",[a("img",{attrs:{src:t(553),alt:"image-20210404143459531"}})]),v._v(" "),a("ul",[a("li",[v._v("第一个任务使用 4 个人来做")]),v._v(" "),a("li",[v._v("第二个任务使用了 1 个人来做")]),v._v(" "),a("li",[v._v("第三个任务使用了 2 个人来做")])]),v._v(" "),a("p",[v._v("那么这一张图就是一个 "),a("strong",[v._v("分布式的集群系统")]),v._v("，总共有三个不同的业务（分布式），多人做同一个业务就是集群。")]),v._v(" "),a("p",[v._v("下面使用电商平台来看看集群是什么样子的")]),v._v(" "),a("p",[a("img",{attrs:{src:t(554),alt:"image-20210404143810421"}})]),v._v(" "),a("p",[v._v("这里按照业务拆分：")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("订单集群")]),v._v(" "),a("p",[v._v("使用 4 台节点来组成一个订单集群")])]),v._v(" "),a("li",[a("p",[v._v("商品集群")]),v._v(" "),a("p",[v._v("使用 2 个节点组成一个商品集群")])]),v._v(" "),a("li",[a("p",[v._v("其他")]),v._v(" "),a("p",[v._v("由于流量不多，使用一个节点来提供服务")])])]),v._v(" "),a("h2",{attrs:{id:"使用集群的优势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用集群的优势"}},[v._v("#")]),v._v(" 使用集群的优势")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("提高系统性能")]),v._v(" "),a("p",[v._v("可以分发流量到各个节点，提高整个系统的性能")])]),v._v(" "),a("li",[a("p",[v._v("提高系统可用性")]),v._v(" "),a("p",[v._v("不会像单体那样宕机之后就无法堆外提供服务了，就算有一两个节点宕机了，也不会影响其他节点提供服务")])]),v._v(" "),a("li",[a("p",[v._v("高扩展性")]),v._v(" "),a("p",[v._v("当预估到高流量的时候，可以适当的增加计算机节点，流量下去之后又可以去掉这些节点")])])]),v._v(" "),a("h2",{attrs:{id:"使用集群的注意点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用集群的注意点"}},[v._v("#")]),v._v(" 使用集群的注意点")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("用户会话")]),v._v(" "),a("p",[v._v("需要使用分布式会话，后续整合 redis 后，会通过 redis 来实现")])]),v._v(" "),a("li",[a("p",[v._v("定时任务")]),v._v(" "),a("p",[v._v("单体变集群环境时，某一个时间点的定时任务会被所有节点执行，某些任务是在同一时间点只能有一个节点执行的，像这种情况下也可以解决，比如下面的方案：")]),v._v(" "),a("ul",[a("li",[v._v("使用分布式锁")]),v._v(" "),a("li",[v._v("把定时任务单独提取出来做成一个服务，部署一个节点来执行")]),v._v(" "),a("li",[v._v("使用 mq 的延迟队列来实现")])])]),v._v(" "),a("li",[a("p",[v._v("内网互通")])])])])}),[],!1,null,null,null);_.default=s.exports}}]);